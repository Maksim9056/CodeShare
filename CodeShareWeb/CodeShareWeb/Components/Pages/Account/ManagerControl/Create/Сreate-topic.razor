@page "/create-topic"
@using CodeShareWeb.Components.Layout
@using CodeShare_Library.Abstractions
@using CodeShare_Library.Models
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject ILanguage ILanguage
@inject ICodeShareCodeSnippets ICodeShareCodeSnippets

<link rel="stylesheet" href="/css/create-topic.css">


<div class="container">

    <Sidebar roles="roles" />
    <!-- Основной контент -->
    <main class="content">
        <header class="header">
            <h1>Создание темы</h1>
            <div class="user-settings">
                <span>Имя</span>
                <div class="avatar"></div>
                <a href="/User-profile">Настройки</a>
            </div>
        </header>

        <!-- Форма создания темы -->
        <section class="create-topic">
            <form>
                <div class="form-group">
                    <label for="topic-title">Название темы</label>
                    <input type="text" @bind="codeSnippets.Title" id="topic-title" name="topic-title" placeholder="Введите название темы" required>
                </div>

                <div class="form-group">
                    <label for="programming-language">Язык программирования</label>
                    <select id="programming-language" name="programming-language" @onchange="OnLanguageChanged">
                        @foreach (var s in Languages)
                        {
                            <option value="@s.Id_Programming_language">@s.Programming_language</option>

                        }

                    </select>
                </div>
                <div class="form-group">
                    <label for="programming-language">Видимость темы</label>
                    <select id="programming-language" name="programming-language" @onchange="OnSetingTopicChanged">
                            <option value="Public">Публичный</option>
                            <option value="Private">Приватный</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="code">Код</label>
                    <textarea id="code" @bind="codeSnippets.Code" name="code" rows="10" placeholder="Введите ваш код"></textarea>
                </div>

                <div class="form-buttons">
                    <button type="button" @onclick="Callback" class="cancel-button">Отмена</button>
                    <button type="submit" @onclick="Сreate" class="create-button">Создать</button>
                </div>
            </form>
        </section>
    </main>
</div>

@code {
    Roles roles = new Roles() { RolesId = 2, NameRole = "" };
    // @bind="codeSnippets.Programming_language"
    CodeSnippets codeSnippets = new CodeSnippets();
    public List<Language> Languages = new List<Language>();

    Setting Setting = new Setting()
    {
     Block = false,
     Hide = "",
     Prohibition = false,
    };

    protected override async Task OnInitializedAsync()
    {
        try
        {


            Console.WriteLine($"OnInitialized вызван в {DateTime.Now}");


        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            if (firstRender)
            {
                Languages = await ILanguage.GetAllAsync();
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private void OnSetingTopicChanged(ChangeEventArgs e)
    {
        // = e.Value.ToString();
        Setting.Visibility_Setting = e.Value.ToString();
        // Логика, выполняемая при изменении выбора
        Console.WriteLine($"Выбранный доступность темы: {Setting.Visibility_Setting}");
    }

    private void OnLanguageChanged(ChangeEventArgs e)
    {
        // = e.Value.ToString();
        codeSnippets.Programming_language = Convert.ToInt64(e.Value.ToString());
        // Логика, выполняемая при изменении выбора
        Console.WriteLine($"Выбранный язык: {codeSnippets.Programming_language}");
    }

    public void Callback()
    {
        NavigationManager.NavigateTo("/topics");
    }



    public async Task Сreate()
    {
        codeSnippets.Description = "";
        codeSnippets.IsAdmin = 1;
        codeSnippets.CreateAt = $"{DateTime.UtcNow}";
        codeSnippets.UpdateAt = "";
        codeSnippets.UserId = 2;
        // codeSnippets.IsAdmin;
        var topic =  await ICodeShareCodeSnippets.Create(codeSnippets);

        // Setting
        NavigationManager.NavigateTo("/review-code");
    }

}
