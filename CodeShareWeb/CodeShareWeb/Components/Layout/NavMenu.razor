@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using Microsoft.Extensions.Caching.Memory
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IMemoryCache MemoryCache

<link rel="stylesheet" href="/css/main.css">

@if (!ShouldHideNavbar)
{
    <div class="top-row ps-3 navbar navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="">CodeShareWeb</a>
        </div>
    </div>

    <input type="checkbox" title="Navigation menu" class="navbar-toggler" />

    <div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
        <nav class="flex-column">
            @if (Rolles == "Пользователь")
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Main" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Главная
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/topics">
                        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Тема
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="browse-topics">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>   Просматривать темы
                    </NavLink>

                </div>
            }


            @if (Rolles == "Админ")
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account-settings">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>  Настройки аккаунта
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="System-update-list">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>   Изменения в системе
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Logos-page">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>  Логотип системы
                    </NavLink>
                </div>
            }
        </nav>
    </div>
}

@code {
    private bool ShouldHideNavbar;
    public string Rolles { get; set; }
    private readonly List<string> HiddenNavbarUrls = new()
    {
        "/",            // Главная страница
        "/login",       // Страница входа
        "/registration"     // Страница регистрации
    };

    protected override void OnInitialized()
    {
        try
        {

            var currentUri = NavigationManager.Uri.ToLower();
            var uri = new Uri(currentUri);

            // Извлекаем часть после порта
            var pathAfterPort = uri.AbsolutePath;
            // Если текущий адрес совпадает с одним из HiddenNavbarUrls, скрываем navbar
            ShouldHideNavbar = HiddenNavbarUrls.Any(url => pathAfterPort == url);

            var roles = MemoryCache.Get<string>("Roles");
            if (!string.IsNullOrEmpty(roles))
            {
                Rolles = roles;

            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // // {
    // //     // Проверяем текущий URL
    // //     var currentUri = NavigationManager.Uri.ToLower();
    // //     var uri = new Uri(currentUri);

    // //     // Извлекаем часть после порта
    // //     var pathAfterPort = uri.AbsolutePath;
    // //     // Если текущий адрес совпадает с одним из HiddenNavbarUrls, скрываем navbar
    // //     ShouldHideNavbar = HiddenNavbarUrls.Any(url => pathAfterPort == url);
    //     var Roles = await localStorage.GetItemAsync<string>("Roles");
    //     Rolles = Roles;
    //     StateHasChanged();
    // }
}





@* <div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">CodeShareWeb</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>
    </nav>
</div>

 *@